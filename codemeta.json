{
    "@context": "https://w3id.org/codemeta/3.0",
    "@type": "SoftwareSourceCode",
    "license": {
        "name": "Apache License 2.0",
        "url": "https://raw.githubusercontent.com/fran2410/AI-Open-Science/main/LICENSE",
        "identifier": "https://spdx.org/licenses/Apache-2.0"
    },
    "codeRepository": "https://github.com/fran2410/AI-Open-Science",
    "issueTracker": "https://github.com/fran2410/AI-Open-Science/issues",
    "dateCreated": "2025-02-04",
    "dateModified": "2025-02-17",
    "downloadUrl": "https://github.com/fran2410/AI-Open-Science/releases",
    "name": "AI-Open-Science",
    "keywords": "",
    "programmingLanguage": [
        "Python"
    ],
    "softwareRequirements": [
        "Make sure you have the following installed:\n- [Conda](https://docs.conda.io/en/latest/miniconda.html) \n- [Poetry](https://python-poetry.org/docs/#installation)\n",
        "Run the following command in the root of the repository to install dependencies:\n```bash\npoetry install\n```\n"
    ],
    "releaseNotes": "First stable release of AI-Open-Science, a tool for extracting and visualizing data from scientific papers in XML format. This version includes keyword cloud generation, figure count analysis, and link extraction, leveraging GROBID for document processing.\r\n\r\n**Full Changelog**: https://github.com/fran2410/AI-Open-Science/commits/0.1.0",
    "softwareVersion": "0.1.0",
    "buildInstructions": [
        "\n# Prerequisites\n\nMake sure you have the following installed:\n- [Conda](https://docs.conda.io/en/latest/miniconda.html) \n- [Poetry](https://python-poetry.org/docs/#installation)\n\n# Installation\n\n##  Clone the repository:\n   ```bash\n   git clone https://github.com/fran2410/AI-Open-Science.git\n   cd AI-Open-Science\n   ```\n## Conda\n\n#### Create and activate the Conda environment\n```bash\nconda create -n ai-open-science python=3.13 \nconda activate ai-open-science\n```\n\n## Poetry\n\n#### 1. Install Poetry\nIf you don\u2019t have Poetry installed, run:\n```bash\npip install poetry\n```\n\n#### 2. Install project dependencies\nRun the following command in the root of the repository to install dependencies:\n```bash\npoetry install\n```\n\n## Activate enviroment\nActivate the enviroment to start working:\n```bash\nconda activate ai-open-science\n```\n\n## Verify installation\nYou can check if everything is correctly installed by running:\n```bash\npython -c \"import matplotlib, wordcloud; print('Installation successful')\"\n```\n\n\n",
        "https://github.com/fran2410/AI-Open-Science/tree/main/docs",
        "https://raw.githubusercontent.com/fran2410/AI-Open-Science/main/README.md"
    ],
    "author": [
        {
            "@type": "Person",
            "@id": "https://github.com/fran2410"
        }
    ],
    "referencePublication": [
        {
            "@type": "ScholarlyArticle",
            "name": "ai-open-science",
            "identifier": null,
            "url": null
        }
    ],
    "identifier": "https://doi.org/10.5281/zenodo.14882666",
    "readme": "https://raw.githubusercontent.com/fran2410/AI-Open-Science/main/README.md",
    "description": [
        "Repositorio para la realizacion y entrega de los trabajos de la asignatura Artificial Intelligence And Open Science In Research Software Engineering",
        "This repository provides tools for extracting and visualizing information from scientific papers in XML format. Using [GROBID](https://github.com/kermitt2/grobid). for document processing, the scripts generate keyword clouds, charts displaying the number of figures per document, and extract links from XML files.\n",
        "```\n\u251c\u2500\u2500 papers/         # Original research papers\n\u251c\u2500\u2500 data/           # XML files \n\u251c\u2500\u2500 scripts/        # Python scripts for data extraction and visualization\n\u2502   \u251c\u2500\u2500 keywordCloud.py  # Generates a keyword cloud from abstracts\n\u2502   \u251c\u2500\u2500 charts.py        # Creates charts showing the number of figures per document\n\u2502   \u251c\u2500\u2500 list.py          # Extracts links from XML files (excluding references)\n\u251c\u2500\u2500 results/        # Output directory for generated files\n\u251c\u2500\u2500 documentation/  # Additional documentation \n```\n \n"
    ]
}